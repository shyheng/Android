EventBus是一个消息总线，以观察者模式实现，用于简化程序的组件、线程通信，可以轻易切换线程、开辟线程，包括后台线程、UI线程、异步线程

1.定义事件
public class MessageEvent {
    public final String message;

    public MessageEvent(String message) {
        this.message = message;
    }
}

2.准备订阅者
// This method will be called when a MessageEvent is posted
 @Subscribe
 public void onMessageEvent(MessageEvent event){
     Toast.makeText(getActivity(), event.message, Toast.LENGTH_SHORT).show();
 }

 // This method will be called when a SomeOtherEvent is posted
 @Subscribe
 public void handleSomethingElse(SomeOtherEvent event){
     doSomethingWith(event);
 }
//Activity
 @Override
public void onStart() {
    super.onStart();
    EventBus.getDefault().register(this);
}

@Override
public void onStop() {
   EventBus.getDefault().unregister(this);
    super.onStop();
}

3.发送事件
EventBus.getDefault().post(new MessageEvent("Hello everyone!"));
